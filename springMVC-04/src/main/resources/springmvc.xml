<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--使用注解要用组件扫描器，声明组件扫描器-->
    <context:component-scan base-package="com.bjpowernode.controller" />

    <!--声明 springmvc框架中的视图解析器，帮助开发人员设置视图文件的路径-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
        <!--有两个属性: 前缀:视图文件的路径-->
        <property name="prefix" value="/WEB-INF/view/" />
        <!--后缀:视图文件的扩展名-->
        <property name="suffix" value=".jsp" />
    </bean>

    <!--
        注解驱动实现的功能是 完成java对象到json，xml，text，二进制等数据格式的转换
        <mvc:annotation-driven>在加入到springmvc配置文件后，会自动创建HttpMessageConverter接口的7个实现类对象。
        其中包括MappingJackson2HttpMessageConverter(使用jackson工具库中的ObjectMapper实现java对象转为json字符串的)

        HttpMessageConverter接口:消息转换器。功能:定义了java对象转为json，xml等数据格式的方法。
        这个接口有很多实现类，这些实现类完成了 java到json，xml，二进制数据的转换。

        下面的两个方法是控制器类把结果输出给浏览器时使用的:
              boolean canWrite(Class<?> var1, @Nullable MediaType var2);
              void write(T var1, @Nullable MediaType var2, HttpOutputMessage var3);
                1) canWrite：作用检查处理器方法的返回值，能不能转换为var2表示的数据格式，如果检查能转换为JSON,canWrite返回true
                   MediaType表示数据格式的，例如json，xml等。
                2) write：把处理器方法的返回值对象，调用jackson中的ObjectMapper转为json字符串。
                   json = mapper.writeValueAsString(user);
    -->
    <mvc:annotation-driven />
</beans>